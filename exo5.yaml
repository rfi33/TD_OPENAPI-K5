openapi: 3.0.3
info:
  title: Product and Order API
  description: API authentication
  version: 1.0.0

paths:
  /products:
    get:
      tags:
        - Products
      summary: Return list of Products
      parameters:
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/SearchQueryParam'
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                multipleProducts:
                  summary: Multiple products
                  value:
                    - name: "Lait Candia 1L"
                      expiration_datetime: '2025-12-01T12:00:00Z'
                      price: 5000.00
                    - name: "Poire 1kg"
                      expiration_datetime: '2025-08-30T08:00:00Z'
                      price: 4999.99
                emptyList:
                  summary: No product found
                  value: []
  /orders:
    get:
      tags:
        - Orders
      summary: Paginated list of Orders
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                exampleOrderList:
                  summary: Example orders
                  value:
                    - identifier: 1
                      customer_name: Rakoto
                      creation_datetime: '2025-08-29T14:00:00Z'
                      total_amount: 5000.00
                    - identifier: 2
                      customer_name: Rasoa
                      creation_datetime: '2025-08-28T10:30:00Z'
                      total_amount: 9999.99
    post:
      tags:
        - Orders
      summary: Create an order
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            examples:
              newOrder:
                summary: New order example
                value:
                  identifier: 3
                  customer_name: Rabe
                  creation_datetime: '2025-08-29T15:00:00Z'
                  total_amount: 4999.99
      responses:
        '201':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                createdOrder:
                  summary: Created order example
                  value:
                    identifier: 3
                    customer_name: Rabe
                    creation_datetime: '2025-08-29T15:00:00Z'
                    total_amount: 4999.99


components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
        expiration_datetime:
          type: string
          format: date-time
        price:
          type: number
          format: float
      required:
        - name
        - expiration_datetime
        - price

    Order:
      type: object
      properties:
        identifier:
          type: integer
        customer_name:
          type: string
        creation_datetime:
          type: string
          format: date-time
        total_amount:
          type: number
          format: float
      required:
        - identifier
        - customer_name
        - creation_datetime
        - total_amount

  parameters:
    LimitParam:
      name: limit
      in: query
      description: Maximum number of elements
      required: false
      schema:
        type: integer
    SearchQueryParam:
      name: q
      in: query
      description: Search term
      required: false
      schema:
        type: string
    page:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
      required: false
    size:
      name: size
      in: query
      description: Page size
      schema:
        type: integer
      required: false

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

